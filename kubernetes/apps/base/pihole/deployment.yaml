apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-config
  namespace: home-apps
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: "nfs-storage"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: pihole-production
    metallb.universe.tf/allow-shared-ip: pihole-svc
  labels:
    app: pihole
  name: pihole-dhcp
  namespace: home-apps
spec:
  externalTrafficPolicy: Local
  ports:
  - name: client-dhcp
    port: 67
    protocol: UDP
    targetPort: client-dhcp
  selector:
    app: pihole
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: pihole-production
    metallb.universe.tf/allow-shared-ip: pihole-svc
  labels:
    app: pihole
  name: pihole-dns-tcp
  namespace: home-apps
spec:
  externalTrafficPolicy: Local
  ports:
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: dns-tcp
  selector:
    app: pihole
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: pihole-production
    metallb.universe.tf/allow-shared-ip: pihole-svc
  labels:
    app: pihole
  name: pihole-dns-udp
  namespace: home-apps
spec:
  externalTrafficPolicy: Local
  ports:
  - name: dns-udp
    port: 53
    protocol: UDP
    targetPort: dns-udp
  selector:
    app: pihole
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: pihole-production
    metallb.universe.tf/allow-shared-ip: pihole-svc
  labels:
    app: pihole
  name: pihole-web
  namespace: home-apps
spec:
  externalTrafficPolicy: Local
  ports:
  - name: pihole-http
    port: 80
    protocol: TCP
    targetPort: pihole-http
  - name: pihole-ssl
    port: 443
    protocol: TCP
    targetPort: pihole-ssl
  selector:
    app: pihole
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: home-apps
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pihole
    spec:
      containers:
      - env:
        - name: FTLCONF_webserver_api_password
          valueFrom:
            secretKeyRef:
              key: password
              name: pihole-webpassword
        image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        name: pihole
        ports:
        - containerPort: 80
          name: pihole-http
          protocol: TCP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 443
          name: pihole-ssl
          protocol: TCP
        - containerPort: 67
          name: client-dhcp
          protocol: UDP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/pihole
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {
        runAsUser: 0
      }
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pihole-config
status: {}
