apiVersion: v1
kind: PersistentVolume
metadata:
  name: pihole-pv
  namespace: home-apps
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /tank/pihole-share
    server: <NFS_SERVER_IP>

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-config
  namespace: home-apps
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: ""

---

apiVersion: v1
stringData:
  password: <WEB-PASSWORD>
kind: Secret
metadata:
  name: pihole-webpassword
  namespace: home-apps
type: Opaque

---

apiVersion: apps/v1 
kind: Deployment
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: home-apps
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: pihole
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pihole
    spec:
      containers:
      - env:
        - name: ServerIP
          value: <SERVER_IP>
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: pihole-webpassword
        image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        name: pihole
        ports:
        - containerPort: 80
          name: pihole-http
          protocol: TCP
        - containerPort: 537
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 443
          name: pihole-ssl
          protocol: TCP
        - containerPort: 67
          name: client-udp
          protocol: UDP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/pihole
          name: config
        - mountPath: /etc/dnsmasq.d/02-custom.conf
          name: custom-dnsmasq
          subPath: 02-custom.conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {
        runAsUser: 0
      }
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pihole-config
status: {}